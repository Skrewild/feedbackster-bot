from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update
import os
from datetime import datetime

ADMIN_ID = 1710485408
TOKEN = "7971843772:AAFX_pKL9OAWBnGqsgEiDOPB3ITSgZlAiic"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –§–∏–¥–±–µ–∫—Å—Ç–µ—Ä, –±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. ‚úâÔ∏è\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:\n"
        "/feedback –≤–∞—à –æ—Ç–∑—ã–≤"
    )

async def feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    feedback_text = ' '.join(context.args)

    if not feedback_text:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. /feedback \n"
            "–ü—Ä–∏–º–µ—Ä: /feedback –ë–æ—Ç –æ—á–µ–Ω—å –∫–ª–∞—Å—Å–Ω—ã–π!"
        )
        return

    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    entry = f"[{timestamp}] {user.full_name} (–¢–µ–ª–µ–≥—Ä–∞–º: @{user.username})\n{feedback_text}\n\n"

    with open("feedback_log.txt", "a", encoding="utf-8") as file:
        file.write(entry)

    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")

async def view_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id

    if user_id != ADMIN_ID:
        await update.message.reply_text("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        with open("feedback_log.txt", "r", encoding="utf-8") as file:
            content = file.read()

        if not content.strip():
            await update.message.reply_text("–§–∞–π–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏ –ø—É—Å—Ç.")
        else:
            chunks = [content[i:i+4000] for i in range(0, len(content), 4000)]
            for chunk in chunks:
                await update.message.reply_text(f"üìÑ –û—Ç–∑—ã–≤—ã:\n\n{chunk}")
    except FileNotFoundError:
        await update.message.reply_text("–§–∞–π–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("feedback", feedback))
    app.add_handler(CommandHandler("view_feedback", view_feedback))


    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
